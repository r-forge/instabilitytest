// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// findZ
double findZ(double alpha, double w, double fi, double kappa, double delta, double sigma, double tau);
RcppExport SEXP _instabilityTest_findZ(SEXP alphaSEXP, SEXP wSEXP, SEXP fiSEXP, SEXP kappaSEXP, SEXP deltaSEXP, SEXP sigmaSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type fi(fiSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(findZ(alpha, w, fi, kappa, delta, sigma, tau));
    return rcpp_result_gen;
END_RCPP
}
// instabilityQuantile
double instabilityQuantile(double alpha, double w, double fi, double delta, double sigma, double kappa, double a, double b, double k);
RcppExport SEXP _instabilityTest_instabilityQuantile(SEXP alphaSEXP, SEXP wSEXP, SEXP fiSEXP, SEXP deltaSEXP, SEXP sigmaSEXP, SEXP kappaSEXP, SEXP aSEXP, SEXP bSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type fi(fiSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(instabilityQuantile(alpha, w, fi, delta, sigma, kappa, a, b, k));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_instabilityTest_findZ", (DL_FUNC) &_instabilityTest_findZ, 7},
    {"_instabilityTest_instabilityQuantile", (DL_FUNC) &_instabilityTest_instabilityQuantile, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_instabilityTest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
